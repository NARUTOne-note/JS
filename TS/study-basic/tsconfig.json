{
  "extends": "", // extends的值是一个字符串，包含指向另一个要继承文件的路径。在原文件里的配置先被加载，然后被来至继承文件里的配置重写。 如果发现循环引用，则会报错。
  "compilerOptions": { // 可以被忽略，这时编译器会使用默认值
      "module": "system",
      "noImplicitAny": true,
      "removeComments": true,
      "preserveConstEnums": true,
      "outFile": "../../built/local/tsc.js",
      "sourceMap": true,
      "typeRoots" : ["./typings"], // 默认所有可见的"@types"包会在编译过程中被包含进来; 如果指定了typeRoots，只有typeRoots下面的包才会被包含进来
      // 注意，自动引入只在你使用了全局的声明（相反于模块）时是重要的。 如果你使用 import "foo"语句，TypeScript仍然会查找node_modules和node_modules/@types文件夹来获取foo包。
      "types" : ["node", "lodash", "express"] // 如果指定了types，只有被列出来的包才会被包含进来; 指定"types": []来禁用自动引入@types包。
  },
  "files": [ // 指定一个包含相对或绝对文件路径的列表

  ],
  "include": [
      "src/**/*"
  ],
  "exclude": [
      "node_modules",
      "**/*.spec.ts"
  ]
}